// 混合器工具库
@use "sass:color";
@use "sass:map";

// 响应式断点混合器
$breakpoints: (
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  2xl: 1536px
);

@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "#{$breakpoint} 不是有效的断点名称。可用断点: #{map.keys($breakpoints)}";
  }
}

// Flexbox 混合器
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// 按钮混合器
@mixin button-variant($color, $background, $border: $background) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover {
    background-color: color.adjust($background, $lightness: -7.5%);
    border-color: color.adjust($border, $lightness: -10%);
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba($border, 0.5);
  }
}

// 过渡混合器
@mixin transition($property: all, $duration: 0.3s, $ease: ease-in-out) {
  transition: $property $duration $ease;
}

// 阴影混合器
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $level == 2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.12);
  } @else if $level == 3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), 0 3px 6px rgba(0, 0, 0, 0.10);
  } @else if $level == 4 {
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.15), 0 5px 10px rgba(0, 0, 0, 0.05);
  } @else if $level == 5 {
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
  }
}

// 截断文本混合器
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-multiline-truncate($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 绝对定位混合器
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 尺寸混合器
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// 边框半径混合器
@mixin border-radius($radius) {
  border-radius: $radius;
}

// 渐变背景混合器
@mixin gradient($direction, $colors...) {
  background: linear-gradient($direction, $colors);
}

// 动画混合器
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation($name, $duration: 0.3s, $ease: ease-in-out, $delay: 0s, $count: 1) {
  animation: $name $duration $ease $delay $count;
}