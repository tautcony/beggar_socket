{
  "ui": {
    "app": {
      "title": "ChisFlash Burner"
    },
    "github": {
      "tooltip": "Visit GitHub Repository"
    },
    "device": {
      "connect": "Connect Device",
      "connecting": "Connecting...",
      "connected": "Connected (Disconnect)",
      "disconnected": "Disconnected",
      "connectFailed": "Connection Failed",
      "disconnectFailed": "Disconnect Failed",
      "usePolyfill": "Use SoW",
      "usePolyfillTooltip": "Use Web Serial Polyfill implementation, suitable for browsers that don't support native Web Serial API"
    },
    "mode": {
      "gba": "GBA",
      "mbc5": "MBC5",
      "title": "Operation Mode"
    },
    "menu": {
      "tools": "Tools",
      "romAssembly": "ROM Assembly",
      "romAssemblyDesc": "Assemble multiple ROM files into a multi-cart",
      "romAnalyzer": "ROM Analyzer & Extractor",
      "romAnalyzerDesc": "Analyze ROM file structure and extract individual games",
      "debugTool": "Debug Tool",
      "debugToolDesc": "Manually send and receive protocol packets",
      "settings": "Settings",
      "settingsDesc": "Configure application options",
      "about": "About",
      "aboutDesc": "View application information and version"
    },
    "about": {
      "version": "Version",
      "description": "ChisFlash game cartridge flashing tool that supports reading, writing, and managing GBA and MBC5 cartridges.",
      "techStack": "Tech Stack",
      "projectInfo": "Project Information",
      "sourceCode": "Source Code",
      "reportIssue": "Report Issue",
      "license": "Open Source License",
      "licenseText": "This project is released under the GPL 3.0 license. Contributions and feedback are welcome.",
      "viewLicense": "View License",
      "acknowledgments": "Acknowledgments",
      "acknowledgmentsText": "Thanks to all developers who contribute to the Chis Universe."
    },
    "operation": {
      "title": "Chip Operations",
      "busy": "Operating...",
      "readId": "Read Cartridge",
      "eraseChip": "Erase Chip",
      "readRom": "Read ROM",
      "startReadingMultiCart": "Starting multi-cart ROM block reading...",
      "readMultiCartSuccess": "Multi-cart reading completed",
      "readMultiCartFailed": "Multi-cart reading failed",
      "multiCartDetected": "multi-cart detected",
      "singleGameDetected": "Single game detected",
      "noValidGameFound": "No valid game found",
      "chipInfo": "Chip Information",
      "manufacturer": "Manufacturer",
      "deviceId": "Device ID",
      "chipType": "Chip Type",
      "capacity": "Capacity",
      "cfiQuery": "CFI Query",
      "queryString": "Query String",
      "algorithm": "Algorithm",
      "deviceSize": "Device Size",
      "interfaceDescription": "Interface Description"
    },
    "debug": {
      "panel": "Debug Panel",
      "title": "Debug Control Panel",
      "enableDebugMode": "Enable Debug Mode",
      "simulationSettings": "Simulation Settings",
      "delayTime": "Delay Time (ms)",
      "progressInterval": "Progress Update Interval (ms)",
      "simulateErrors": "Simulate Errors",
      "errorProbability": "Error Probability",
      "quickActions": "Quick Actions",
      "connectMockDevice": "Connect Mock Device",
      "generateTestRom": "Generate Test ROM",
      "generateTestRam": "Generate Test RAM",
      "clearMockData": "Clear Mock Data",
      "statusInfo": "Status Information",
      "debugMode": "Debug Mode",
      "enabled": "Enabled",
      "disabled": "Disabled",
      "simulatedDelay": "Simulated Delay",
      "errorSimulation": "Error Simulation",
      "off": "Off",
      "tool": {
        "title": "Debug Tool",
        "commandType": "Command Type",
        "selectCommandType": "Select command type",
        "command": "Command",
        "selectCommand": "Select command",
        "address": "Address",
        "optional": "optional",
        "addressPlaceholder": "0x0000 or hex address",
        "length": "Length",
        "lengthPlaceholder": "Data length (bytes)",
        "data": "Data",
        "dataPlaceholder": "Hex data, e.g.: 01 02 03 or 010203",
        "dataHint": "Enter hex data, spaces are optional",
        "receiveLength": "Receive Length",
        "receiveLengthPlaceholder": "Expected bytes to receive",
        "receiveLengthHint": "Default value set based on command type, can be adjusted manually",
        "timeout": "Timeout (ms)",
        "timeoutPlaceholder": "Request timeout duration",
        "timeoutHint": "Uses default timeout if not specified",
        "send": "Send",
        "sending": "Sending...",
        "clear": "Clear",
        "request": "Request Data",
        "response": "Response Data",
        "analysis": "Analysis",
        "noRequestData": "No request data",
        "noResponseData": "No response data",
        "responseLength": "Response Length",
        "bytes": "bytes",
        "executionTime": "Execution Time",
        "commandSent": "Command sent successfully",
        "errors": {
          "noDevice": "No device connected",
          "invalidHexLength": "Hex data length must be even",
          "invalidHexData": "Invalid hex data format",
          "noResponse": "No response from device",
          "commandFailed": "Command execution failed"
        }
      }
    },
    "chip": {
      "deviceSize": "Device Size",
      "sectorCount": "Sector Count",
      "sectorSize": "Sector Size",
      "bufferWrite": "Buffer Write"
    },
    "rom": {
      "title": "ROM Operations",
      "selectFile": "Select ROM File",
      "fileName": "File Name",
      "fileSize": "File Size",
      "clearFile": "Clear File",
      "write": "Write ROM",
      "read": "Export ROM",
      "verify": "Verify ROM",
      "preview": "Preview",
      "bankSwitching": "Bank Switching",
      "romTitle": "ROM Title",
      "romSize": "ROM Size",
      "sizeLabel": "Size:",
      "baseAddressLabel": "Base Address:",
      "useAssembledRom": "Use Assembled ROM",
      "baseAddressOptions": {
        "fullCart": "Full Cart",
        "menu": "Menu",
        "game": "Game{index}",
        "bank": "Bank{index}"
      },
      "info": "ROM Information",
      "type": "Type",
      "gameCode": "Game Code",
      "maker": "Maker",
      "version": "Version",
      "region": "Region",
      "size": "File Size",
      "cartType": "Cart Type",
      "ramSize": "RAM Size",
      "valid": "Valid",
      "logo": "Logo",
      "edit": "Edit ROM Info"
    },
    "romAnalyzer": {
      "uploadPrompt": "Select ROM file or drag it here",
      "uploadHint": "Supports .rom, .gba, .gb, .gbc formats",
      "fileInfo": "File Information",
      "fileName": "File Name",
      "fileSize": "File Size",
      "detectedGames": "Detected Games",
      "startAddress": "Start Address",
      "romSize": "ROM Size",
      "description": "Description",
      "extract": "Extract",
      "analyzing": "Analyzing...",
      "extracting": "Extracting...",
      "analyze": "Analyze ROM",
      "noFileSelected": "No file selected",
      "invalidRom": "Invalid ROM file",
      "noValidGameFound": "No valid game found",
      "analysisComplete": "Analysis complete, found {count} game(s)",
      "analysisFailed": "Analysis failed",
      "extractSuccess": "Extract successful",
      "extractFailed": "Extract failed",
      "singleRom": "Single ROM"
    },
    "romAssembly": {
      "title": "ROM Assembly",
      "romType": "ROM Type",
      "totalSize": "Total Size",
      "alignment": "Alignment",
      "uploadFiles": "Upload Files",
      "selectFiles": "Select ROM files or drag them here",
      "pendingFiles": "Pending Files",
      "requiredSlots": "Requires {count} slot(s)",
      "romLayout": "ROM Layout",
      "usageStats": "Used: {used} / {total} ({percentage}%)",
      "emptySlot": "Empty Slot",
      "clearAll": "Clear All",
      "assemble": "Assemble ROM",
      "assembleAndApply": "Assemble & Apply",
      "assembleAndDownload": "Assemble & Download",
      "noPendingFiles": "No pending files",
      "uploadFilesFirst": "Please upload files first",
      "occupiesSlots": "Occupies slots {start}~{end}",
      "fileContinuation": "{name} (cont.)"
    },
    "emulator": {
      "title": "Game Preview",
      "running": "Running",
      "paused": "Paused",
      "pause": "Pause",
      "reset": "Reset",
      "close": "Close",
      "retry": "Retry",
      "loading": "Loading Emulator",
      "loaded": "Emulator loaded successfully",
      "resumed": "Game resumed",
      "initError": "Failed to initialize emulator",
      "operationFailed": "Operation failed",
      "resetFailed": "Reset failed",
      "loadFailed": "Load failed",
      "dpad": "D-Pad",
      "aButton": "A Button",
      "bButton": "B Button",
      "start": "Start",
      "select": "Select", 
      "l": "L Button",
      "r": "R Button",
      "buttons": "A/B Buttons",
      "startSelect": "Start/Select",
      "controlsHelp": "Use keyboard to control the game",
      "initSuccess": "Emulator initialized successfully",
      "errors": {
        "invalidRom": "Invalid ROM file",
        "romLoadFailed": "Failed to load ROM",
        "startGameFailed": "Failed to start game",
        "error": "Emulator error occurred",
        "crashed": "Emulator has crashed",
        "canvasNotAvailable": "Canvas element not available",
        "romDataNotProvided": "ROM data not provided",
        "romTooSmall": "ROM data appears to be too small",
        "webAssemblyNotSupported": "WebAssembly is not supported in this browser",
        "createInstanceFailed": "Failed to create GBA emulator instance",
        "unknownError": "Unknown error occurred",
        "multipleInitFailures": "Multiple initialization failures ({count}). Please check ROM compatibility.",
        "emulatorCrashed": "Emulator crashed: {error}",
        "multipleCrashes": "Multiple crashes detected. The ROM may be incompatible.",
        "keyPressError": "Key press error: {error}",
        "pauseResumeError": "Pause/resume error: {error}",
        "resetError": "Reset error: {error}",
        "tooManyRetries": "Too many retries, please refresh the page"
      }
    },
    "ram": {
      "title": "RAM Operations",
      "selectFile": "Select RAM File",
      "fileName": "File Name",
      "fileSize": "File Size",
      "clearFile": "Clear File",
      "write": "Write RAM",
      "read": "Export RAM",
      "verify": "Verify RAM",
      "testWrite": "Write Test Data",
      "testRead": "Read Test Data",
      "testVerify": "Verify Test Data",
      "sizeLabel": "Size:",
      "typeLabel": "Type:",
      "baseAddressLabel": "Base Address:",
      "typeSRAM": "SRAM",
      "typeFLASH": "FLASH",
      "baseAddressOptions": {
        "fullCart": "Full Cart",
        "menu": "Menu",
        "game": "Game{index}",
        "bank": "Bank{index}"
      }
    },
    "file": {
      "dropArea": "or drop files here",
      "accept": "Supports {format} format",
      "dragOver": "Release files",
      "browse": "Browse...",
      "selected": "Selected file: {name}",
      "cleared": "Cleared file selection"
    },
    "log": {
      "title": "Log",
      "clear": "Clear Log"
    },
    "settings": {
      "title": "Advanced Settings",
      "tooltip": "Configure advanced options",
      "size": {
        "title": "Read/Write Settings",
        "romPageSize": "ROM Read/Write Page Size",
        "ramPageSize": "RAM Read/Write Page Size",
        "bytes": "bytes",
        "validation": {
          "required": "This field is required",
          "min": "Minimum value is {min} bytes",
          "max": "Maximum value is {max} bytes",
          "invalid": "Please enter a valid number",
          "range": "Size must be between {min} - {max} bytes",
          "multiple": "Size must be a multiple of {multipler}"
        }
      },
      "timeout": {
        "title": "Timeout Settings",
        "defaultTimeout": "Default Timeout",
        "packageSendTimeout": "Package Send Timeout",
        "packageReceiveTimeout": "Package Receive Timeout",
        "operationTimeout": "Operation Timeout",
        "milliseconds": "ms",
        "validation": {
          "required": "This field is required",
          "min": "Minimum value is {min} ms",
          "max": "Maximum value is {max} ms",
          "invalid": "Please enter a valid number",
          "range": "Timeout must be between {min} - {max} milliseconds"
        }
      },
      "actions": {
        "reset": "Reset to Defaults",
        "apply": "Apply",
        "close": "Close",
        "resetConfirm": "Are you sure you want to reset all settings to default values?"
      },
      "messages": {
        "applied": "Settings applied successfully",
        "reset": "Settings reset to default values",
        "validationError": "Please fix validation errors before applying settings",
        "saveError": "Failed to save settings, please check input values",
        "saveSuccess": "Settings saved successfully"
      }
    },
    "progress": {
      "title": "Transfer Progress",
      "transferred": "Transferred",
      "remaining": "Remaining",
      "speed": "Transfer Speed",
      "elapsed": "Elapsed Time",
      "remaining_time": "Remaining Time",
      "total_size": "Total Size",
      "stop": "Stop",
      "close": "Close",
      "completed": "Completed, click outside to close",
      "writing": "{written} / {total} bytes",
      "complete": "Complete",
      "percent": "{percent}%",
      "sectorMap": "Sector Map",
      "sectorTooltip": "Address: {address}, Size: {size}, State: {state}",
      "sectorState": {
        "pending": "Pending",
        "processing": "Processing",
        "completed": "Completed",
        "error": "Error"
      }
    },
    "common": {
      "yes": "Yes",
      "no": "No",
      "cancel": "Cancel",
      "save": "Save"
    }
  },
  "messages": {
    "device": {
      "tryingConnect": "Trying to connect device...",
      "noInterface": "No available USB interface or endpoints found.",
      "connectionSuccess": "Device connected successfully",
      "connectionFailed": "Device connection failed: {error}",
      "disconnectionSuccess": "Device disconnected successfully",
      "disconnectionFailed": "Device disconnection failed: {error}",
      "initializationSuccess": "Device initialized successfully"
    },
    "operation": {
      "readId": "Reading ID...",
      "readIdSuccess": "ID read successfully",
      "readIdFailed": "Failed to read ID",
      "readCartSuccess": "Cartridge information read successfully",
      "readCartFailed": "Failed to read cartridge information",
      "startEraseSectors": "Starting sector erase - Start address: {startAddress}, End address: {endAddress}, Sector size: {sectorSize} bytes",
      "startWriteROM": "Starting ROM write - Data size: {fileSize} bytes, Base address: {baseAddress}, Page size: {pageSize} bytes, Buffer size: {bufferSize} bytes",
      "startReadROM": "Starting ROM read - Size: {size} bytes, Base address: {baseAddress}",
      "startVerifyROM": "Starting ROM verify - Data size: {fileSize} bytes, Base address: {baseAddress}",
      "startWriteRAM": "Starting RAM write - Data size: {fileSize} bytes, Base address: {baseAddress}",
      "startReadRAM": "Starting RAM read - Size: {size} bytes, Base address: {baseAddress}",
      "startVerifyRAM": "Starting RAM verify - Data size: {fileSize} bytes, Base address: {baseAddress}",
      "startGetCartInfo": "Starting to get cartridge information",
      "eraseChip": "Erasing chip...",
      "eraseSuccess": "Erase successful",
      "eraseFailed": "Erase failed",
      "eraseSector": "Erasing sector {from} - {to}",
      "writeSuccess": "Write successful",
      "writeFailed": "Write failed",
      "readSuccess": "Read successful",
      "readFailed": "Read failed",
      "verifySuccess": "Verify successful",
      "verifyFailed": "Verify failed",
      "cancelled": "Operation cancelled",
      "readCartInfoFirst": "Please read cartridge information first",
      "unsupportedMode": "Mode not supported or adapter uninitialized",
      "noRomFile": "Please select a ROM file first",
      "unknownFlashId": "ID not recognized, may not be able to write",
      "eraseComplete": "Erase complete",
      "eraseInProgress": "Erasing in progress...",
      "eraseSectorAddress": "Erasing sector {address}",
      "queryingRomSize": "Querying ROM capacity...",
      "romSizeQuerySuccess": "ROM capacity query successful, device size: {deviceSize}, sector count: {sectorCount}, sector size: {sectorSize}, buffer write bytes: {bufferWriteBytes}",
      "romSizeQueryFailed": "ROM capacity query failed",
      "cfiParseSuccess": "CFI parsing successful",
      "cfiParseFailed": "CFI parsing failed",
      "eraseSectorFailed": "Sector erase failed",
      "eraseSummary": "Erase completed - Total time: {totalTime}, Average speed: {avgSpeed}, Max speed: {maxSpeed}, Total sectors: {totalSectors}"
    },
    "rom": {
      "writing": "Writing ROM, size {size} bytes",
      "written": "Written {written} bytes",
      "writingAt": "Writing at {address}... ({progress}%)",
      "writeComplete": "ROM write complete",
      "writeSuccess": "ROM write successful",
      "writeFailed": "ROM write failed",
      "reading": "Reading ROM...",
      "readingAt": "Reading address {address}... ({progress}%)",
      "readSuccess": "ROM read successful, size {size} bytes",
      "readFailed": "ROM read failed",
      "romSizeQueryFailed": "Failed to query ROM capacity",
      "verify": "ROM verification",
      "verifying": "Verifying ROM...",
      "verifyingAt": "Verifying address {address}... ({progress}%)",
      "verifySuccess": "ROM verification successful",
      "verifyFailed": "ROM verification failed",
      "verifyFailedAt": "Verification failed at address {address}, expected {expected}, got {actual}",
      "verifySummary": "Verification completed - Total time: {totalTime}, Average speed: {avgSpeed}, Max speed: {maxSpeed}, Total size: {totalSize}",
      "sizeChanged": "ROM size changed to {size}",
      "baseAddressChanged": "ROM base address changed to {address}",
      "bankSwitch": "Switched to ROM Bank {bank}",
      "eraseBeforeWrite": "Flash is not empty, starting erase...",
      "capacityInfo": "Capacity: {deviceSize} Sector count: {sectorCount} Sector size: {sectorSize} BuffWr: {bufferWriteBytes}",
      "capacityError": "Failed to get capacity information",
      "checkingIfBlank": "Checking if area is blank",
      "areaIsBlank": "Area is blank",
      "areaNotBlank": "Area is not blank",
      "writeSummary": "ROM write complete summary - Total time: {totalTime}, Average speed: {avgSpeed}, Maximum speed: {maxSpeed}, Total size: {totalSize}",
      "readSummary": "ROM read complete summary - Total time: {totalTime}, Average speed: {avgSpeed}, Maximum speed: {maxSpeed}, Total size: {totalSize}",
      "assembledRomApplied": "Assembled ROM has been applied",
      "assembledRomTypeMismatch": "Assembled ROM type ({assembled}) does not match current mode ({current})",
      "noAssembledRom": "No assembled ROM available",
      "writeNoData": "No data to write, write aborted",
      "noRomDataForEdit": "No ROM data available for editing",
      "unsupportedRomType": "Unsupported ROM type for editing",
      "romInfoUpdated": "ROM information updated successfully",
      "romInfoUpdateFailed": "Failed to update ROM information"
    },
    "emulator": {
      "launched": "Emulator preview launched: {name}",
      "closed": "Emulator closed",
      "unsupportedRom": "Unsupported ROM file format"
    },
    "romAssembly": {
      "fileTooLarge": "File {name} is too large to fit in any slot",
      "cannotPlaceFile": "Cannot place file in this slot",
      "filePlaced": "File {name} has been placed",
      "fileRemoved": "File {name} has been removed",
      "allCleared": "All slots have been cleared",
      "assembled": "ROM assembly completed, total size: {size}, used slots: {usedSlots}",
      "downloaded": "ROM download completed, file: {fileName}, size: {size}",
      "assembledForMainInterface": "Assembled {romType} ROM, size: {size}, available in ROM operations interface",
      "applied": "ROM assembly has been applied to main interface"
    },
    "ram": {
      "writing": "Writing RAM, size {size} bytes",
      "written": "Written {written} bytes",
      "writingAt": "Writing at {address}... ({progress}%)",
      "writeComplete": "RAM write complete",
      "writeSuccess": "RAM write successful",
      "writeFailed": "RAM write failed",
      "reading": "Reading RAM...",
      "readSuccess": "RAM read successful, size {size} bytes",
      "readFailed": "RAM read failed",
      "verify": "RAM verification",
      "verifying": "Verifying RAM...",
      "verifySuccess": "RAM verification successful",
      "verifyFailed": "RAM verification failed",
      "sizeChanged": "RAM size changed to {size}",
      "typeChanged": "RAM type changed to {type}",
      "baseAddressChanged": "RAM base address changed to {address}",
      "verifyFailedAt": "Verification failed at address {address}, expected {expected}, got {actual}",
      "bankSwitch": "Switched to RAM Bank {bank}",
      "writeSummary": "RAM write complete summary - Total time: {totalTime}, Average speed: {avgSpeed}, Maximum speed: {maxSpeed}, Total size: {totalSize}",
      "readSummary": "RAM read complete summary - Total time: {totalTime}, Average speed: {avgSpeed}, Maximum speed: {maxSpeed}, Total size: {totalSize}"
    },
    "progress": {
      "writing": "Processed: {written}/{total} bytes",
      "reading": "Processed: {read}/{total} bytes",
      "verifying": "Verified: {verified}/{total} bytes",
      "erasing": "Erased: {erased}/{total} sectors",
      "eraseSpeed": "Erase speed: {speed}",
      "writeSpeed": "Write speed: {speed}",
      "readSpeed": "Read speed: {speed}",
      "verifySpeed": "Verify speed: {speed}",
      "eraseCompleteReady": "Erase complete, ready to continue"
    },
    "mode": {
      "autoSwitched": "Detected {romType} ROM file, automatically switched from {from} mode to {to} mode"
    },
    "mbc5": {
    },
    "gba": {
      "bankSwitchSram": "Switched to SRAM Bank {bank}",
      "bankSwitchFlash": "Switched to Flash Bank {bank}",
      "erasingFlash": "Erasing Flash",
      "eraseStatus": "Erase status: {status}",
      "eraseComplete": "Erase complete"
    },
    "file": {
      "selectRom": "Selected ROM file: {name}, size {size}",
      "clearRom": "Cleared ROM file selection",
      "selectRam": "Selected RAM file: {name}, size {size}",
      "clearRam": "Cleared RAM file selection",
      "writing": "Writing, size {size} bytes",
      "writeComplete": "Write complete",
      "written": "Written {written} bytes",
      "reading": "Start reading",
      "readComplete": "Read complete, size: {size} bytes",
      "verifying": "Start verifying",
      "verifyComplete": "Verify complete"
    },
    "debug": {
      "mockModeEnabled": "Debug mode enabled - using mock device",
      "mockDataCleared": "Mock data cleared"
    }
  }
}
